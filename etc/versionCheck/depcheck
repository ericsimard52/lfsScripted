export LC_ALL=C

declare -a reqList=('bash' 'ld' 'bison' 'bzip2' 'diff' 'find' 'gawk' 'gcc' 'g++' 'ldd' 'grep' 'gzip' 'm4' 'make' 'patch' 'perl' 'sed' 'tar' 'makeinfo' 'xz' 'chown')
declare -a reqVer=('3.2' '2.25' '2.7' '1.0.4' '2.8.1' '4.2.31' '4.0.1' '4.9' '8.2.0' '2.11' '2.5.1a' '1.3.12' '1.4.10' '4.0' '2.5.4' '5.8.8' '4.1.5' '1.2.2' '4.7' '5.0.0' '6.9')
declare -a missReq=()
declare -a badVer=()

v=0
reqLen=${#reqList[@]}
allGood=0
while [ $v -lt $reqLen ]; do
    log "GEN|INFO|Checking if "${reqList[$v]}" is installed." t
    checkInstalled ${reqList[$v]}
    if [[ $? > 0 ]]; then
        log "GEN|ERROR|"${reqList[$v]}" not found." t
        missReq+=(${reqList[$v]})
        allGood=1
    fi
    ((v++))
done
if [[ $allGood > 0 ]]; then
    for r in ${missReq[@]}; do
        log "GEN|ERROR|"$r" required and not found." t
    done
    log "GEN|FATAL|Requirement are not met, please fix before continuing." t
    return 1
fi

v=0
reqLen=${#reqList[@]}
allGood=0

while [ $v -lt $reqLen ]; do
    ri=${reqList[$v]}
    rv=${reqVer[$v]}
    declare ver
    log "GEN|INFO|Checking version of $ri" t
    getVersion  $ri ver
    log "GEN|INFO|Got: $ver"
    vercomp $ver $rv
    if [[ $? > 0 ]]; then
        log "GEN|ERROR|${reqList[$v]}  version is no good, $rv needed." t
        badVer+=($ri'=>'$ver',needed=>'$rv)
        allGood=1
    else
        log "GEN|INFO|"${reqList[$v]}" version OK!" t
    fi
    ((v++))
done

if [[ $allGood > 0 ]]; then
    for r in ${badVer[@]}; do
        log "GEN|ERROR|"$r t
    done
    log "GEN|FATAL|Requirement are not met, please fix before continuing." t
    return 1
fi

MYSH=$(readlink -f /bin/sh)
echo "/bin/sh -> $MYSH"
echo $MYSH | grep -q bash || log "GEN|ERROR|ERROR: /bin/sh does not point to bash" t
unset MYSH
return 1



linuxVer=`cat /proc/version |egrep -o "[0-9].[0-9][0-9].[0-9]" |head -n1`
linuxReq="3.2"
vercomp "$linuxVer" "$linuxReq"
if [[ $? > 0 ]]; then
    log "GEN|ERROR|Linux version too old. Found: $linuxVer, required: $linuxReq" t
else
    log "GEN|INFO|Linux version OK!." t
fi

if [ -h /usr/bin/yacc ]; then
    log "GEN|INFO|/usr/bin/yacc -> `readlink -f /usr/bin/yacc`" t
elif [ -x /usr/bin/yacc ]; then
    log "GEN|INFO|yacc is `/usr/bin/yacc --version | head -n1`" t
else
    log "GEN|ERROR|yacc not found" t
fi


if [ -h /usr/bin/awk ]; then
    awkLink="/usr/bin/awk -> `readlink -f /usr/bin/awk`"
    if [[ "$awkLink" = "/usr/bin/awk -> /usr/bin/gawk" ]]; then
        log "GEN|INFO|awk is symlink to gawk, good!" t
    else
        log "GEN|ERROR|awk $awkLink, should point to gawk." t
    fi
elif [ -x /usr/bin/awk ]; then
    awkInstalled=`/usr/bin/awk --version | head -n1`
    vercomp "$awkInstalled" "4.0.1"
    if [[ $? > 0 ]]; then
        log "GEN|ERROR|Error,awk  version is no good, I found $awkInstalled, 4.0.1 needed." t
    else
        log "GEN|INFO|awk is a link to gawk and version is good!" t
    fi
else
    log "GEN|ERROR|awk not found" t
fi

echo 'int main(){}' > dummy.c && g++ -o dummy dummy.c
if [ -x dummy ];then
    log "GEN|INFO|g++ compilation OK" t
else
    log "GEN|ERROR|g++ compilation failed"
fi
processCmd "rm -fv dummy.c dummy"

log "GEN|INFO|If the requirements are good. Refer back to the manual: Building LFS in Stages." t
log "GEN|INFO|Create your partition and file system and update pkm.conf." t

